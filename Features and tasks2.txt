ðŸŽ‡FEATURES AND TASKS OF THIS APP.ðŸ›’ -->"BACK-END" ðŸ—œðŸ–²

!Tech stack used here - (NodeJs,Express,MongoDB,Mongoose,JWT,Cookies,dotenv)

1. Build full functional backend. 
2. Build this app's REST API (proper documented with comments and onpoint function names ).
3. Upload all the product data to data base(mongoDB) with mongoose.âœ…
4. API, routes and route handlers for the GET req of all products data.âœ…
5. Updating data in the backend (with PUT/PATCH) when the data is updated from the front-end part
   (like updating isFav property for fav list,updating quantity of the product). 
6. DELETE request when item is removed from cart
7. My Orders placed functionality of individual with JWT checking.
8. Payment Integration.


//USER & AUTHENTICATIONS..
1. Creating a user profile(with POST req).âœ…
2. Updating a user profile(with PUT/PATCH).âœ…
3. Sending JWT with cookie when user signup/log-in.âœ…
4. Login/Sign-up functionality(Backend-end-part).âœ…
5. Logout functionality.



//API DETAILS 
1. Proper Documented API.âœ…
2. Security middlewares :-
   *1. Xss-clean (XSS Attacks)âœ…
   *2. RateLimiter (BRUTE-FORCE/DOSS Attacks)âœ…
   *3. Express-mongo-sanitize (NoSQL Injection Attacks)âœ…
3. Compression added.âœ…
4. Cors added. âœ…
5. API fully tested with POSTMAN.
6. Proper Error handle management.
7. Slugify (string to url friendly slug format) âœ…
8. Hash Encrypted password.(bcrypt)âœ…